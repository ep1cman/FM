

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Tue Feb 17 15:25:51 2015

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F45K20
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	text0,global,reloc=2,class=CODE,delta=1
    10                           	psect	text1,global,reloc=2,class=CODE,delta=1
    11                           	psect	text2,global,reloc=2,class=CODE,delta=1
    12                           	psect	text3,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    15  0000                     _INTCON2	set	4081
    16  0000                     _LATD	set	3980
    17  0000                     _PORTB	set	3969
    18  0000                     _TRISB	set	3987
    19  0000                     _TRISD	set	3989
    20  0000                     _WPUB	set	3964
    21                           
    22                           	psect	nvCOMRAM
    23  000020                     __pnvCOMRAM:
    24                           	opt stack 0
    25  000020                     _stage:
    26                           	opt stack 0
    27  000020                     	ds	1
    28                           
    29                           ; #config settings
    30  0000                     
    31                           	psect	cinit
    32  007E46                     __pcinit:
    33                           	opt stack 0
    34  007E46                     start_initialization:
    35                           	opt stack 0
    36  007E46                     __initialization:
    37                           	opt stack 0
    38                           
    39                           ; Clear objects allocated to COMRAM (15 bytes)
    40  007E46  EE00  F011         	lfsr	0,__pbssCOMRAM
    41  007E4A  0E0F               	movlw	15
    42  007E4C                     clear_0:
    43  007E4C  6AEE               	clrf	postinc0,c
    44  007E4E  06E8               	decf	wreg,f,c
    45  007E50  E1FD               	bnz	clear_0
    46  007E52                     end_of_initialization:
    47                           	opt stack 0
    48  007E52                     __end_of__initialization:
    49                           	opt stack 0
    50  007E52  0100               	movlb	0
    51  007E54  EF43  F03F         	goto	_main	;jump to C main() function
    52                           postinc0	equ	0xFEE
    53                           wreg	equ	0xFE8
    54                           
    55                           	psect	bssCOMRAM
    56  000011                     __pbssCOMRAM:
    57                           	opt stack 0
    58  000011                     _readings:
    59                           	opt stack 0
    60  000011                     	ds	15
    61                           postinc0	equ	0xFEE
    62                           wreg	equ	0xFE8
    63                           
    64                           	psect	cstackCOMRAM
    65  000001                     __pcstackCOMRAM:
    66                           	opt stack 0
    67  000001                     ?_digitalRead:
    68                           	opt stack 0
    69  000001                     ?___awmod:
    70                           	opt stack 0
    71  000001                     digitalRead@pin:
    72                           	opt stack 0
    73  000001                     ___awmod@dividend:
    74                           	opt stack 0
    75                           
    76                           ; 2 bytes @ 0x0
    77  000001                     	ds	2
    78  000003                     ??_digitalRead:
    79  000003                     ___awmod@divisor:
    80                           	opt stack 0
    81                           
    82                           ; 2 bytes @ 0x2
    83  000003                     	ds	2
    84  000005                     ___awmod@counter:
    85                           	opt stack 0
    86                           
    87                           ; 1 bytes @ 0x4
    88  000005                     	ds	1
    89  000006                     ___awmod@sign:
    90                           	opt stack 0
    91                           
    92                           ; 1 bytes @ 0x5
    93  000006                     	ds	1
    94  000007                     
    95                           ; 0 bytes @ 0x6
    96  000007                     	ds	2
    97  000009                     digitalRead@i:
    98                           	opt stack 0
    99                           
   100                           ; 2 bytes @ 0x8
   101  000009                     	ds	2
   102  00000B                     
   103                           ; 2 bytes @ 0xA
   104  00000B                     	ds	2
   105  00000D                     
   106                           ; 3 bytes @ 0xC
   107  00000D                     	ds	3
   108  000010                     main@state:
   109                           	opt stack 0
   110                           
   111                           ; 1 bytes @ 0xF
   112  000010                     	ds	1
   113                           postinc0	equ	0xFEE
   114                           wreg	equ	0xFE8
   115                           
   116 ;;
   117 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   118 ;;
   119 ;; *************** function _main *****************
   120 ;; Defined at:
   121 ;;		line 99 in file "main.c"
   122 ;; Parameters:    Size  Location     Type
   123 ;;  argc            2   10[COMRAM] int 
   124 ;;  argv            3   12[COMRAM] PTR PTR unsigned char 
   125 ;; Auto vars:     Size  Location     Type
   126 ;;  state           1   15[COMRAM] unsigned char 
   127 ;; Return value:  Size  Location     Type
   128 ;;                  2   10[COMRAM] int 
   129 ;; Registers used:
   130 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   131 ;; Tracked objects:
   132 ;;		On entry : 0/0
   133 ;;		On exit  : 0/0
   134 ;;		Unchanged: 0/0
   135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   136 ;;      Params:         5       0       0       0       0       0       0
   137 ;;      Locals:         1       0       0       0       0       0       0
   138 ;;      Temps:          0       0       0       0       0       0       0
   139 ;;      Totals:         6       0       0       0       0       0       0
   140 ;;Total ram usage:        6 bytes
   141 ;; Hardware stack levels required when called:    2
   142 ;; This function calls:
   143 ;;		_digitalRead
   144 ;;		_inputPoll
   145 ;; This function is called by:
   146 ;;		Startup code after reset
   147 ;; This function uses a non-reentrant model
   148 ;;
   149                           
   150                           	psect	text0
   151  007E86                     __ptext0:
   152                           	opt stack 0
   153  007E86                     _main:
   154                           	opt stack 29
   155                           
   156                           ;main.c: 100: TRISD = 0x00;
   157                           
   158                           ;incstack = 0
   159  007E86  0E00               	movlw	0
   160  007E88  6E95               	movwf	3989,c	;volatile
   161                           
   162                           ;main.c: 101: TRISB = 0xFF;
   163  007E8A  6893               	setf	3987,c	;volatile
   164                           
   165                           ;main.c: 102: WPUB = 0xFF;
   166  007E8C  687C               	setf	3964,c	;volatile
   167                           
   168                           ;main.c: 103: INTCON2 &= 0b01111111;
   169  007E8E  9EF1               	bcf	intcon2,7,c	;volatile
   170                           
   171                           ;main.c: 104: char state = 1;
   172  007E90  0E01               	movlw	1
   173  007E92  6E10               	movwf	main@state,c
   174  007E94                     l683:
   175                           
   176                           ;main.c: 106: {
   177                           ;main.c: 107: inputPoll();
   178  007E94  EC2C  F03F         	call	_inputPoll	;wreg free
   179                           
   180                           ;main.c: 108: if(!digitalRead(0))
   181  007E98  0E00               	movlw	0
   182  007E9A  6E02               	movwf	digitalRead@pin+1,c
   183  007E9C  0E00               	movlw	0
   184  007E9E  6E01               	movwf	digitalRead@pin,c
   185  007EA0  ECB7  F03F         	call	_digitalRead	;wreg free
   186  007EA4  5002               	movf	?_digitalRead+1,w,c
   187  007EA6  1001               	iorwf	?_digitalRead,w,c
   188  007EA8  A4D8               	btfss	status,2,c
   189  007EAA  D016               	goto	l29
   190                           
   191                           ;main.c: 109: {
   192                           ;main.c: 110: if (state == 0b10000000) state = 0b00000001;
   193  007EAC  5010               	movf	main@state,w,c
   194  007EAE  0A80               	xorlw	128
   195  007EB0  A4D8               	btfss	status,2,c
   196  007EB2  D002               	goto	l691
   197  007EB4  0E01               	movlw	1
   198  007EB6  D002               	goto	L1
   199  007EB8                     l691:
   200                           
   201                           ;main.c: 111: else state = state << 1;
   202  007EB8  5010               	movf	main@state,w,c
   203  007EBA  2410               	addwf	main@state,w,c
   204  007EBC                     L1:
   205  007EBC  6E10               	movwf	main@state,c
   206  007EBE  D002               	goto	l695
   207  007EC0                     l693:
   208  007EC0  EC2C  F03F         	call	_inputPoll	;wreg free
   209  007EC4                     l695:
   210  007EC4  0E00               	movlw	0
   211  007EC6  6E02               	movwf	digitalRead@pin+1,c
   212  007EC8  0E00               	movlw	0
   213  007ECA  6E01               	movwf	digitalRead@pin,c
   214  007ECC  ECB7  F03F         	call	_digitalRead	;wreg free
   215  007ED0  5002               	movf	?_digitalRead+1,w,c
   216  007ED2  1001               	iorwf	?_digitalRead,w,c
   217  007ED4  B4D8               	btfsc	status,2,c
   218  007ED6  D7F4               	goto	l693
   219  007ED8                     l29:
   220                           
   221                           ;main.c: 113: }
   222                           ;main.c: 114: LATD = state;
   223  007ED8  C010  FF8C         	movff	main@state,3980	;volatile
   224  007EDC  D7DB               	goto	l683
   225  007EDE                     __end_of_main:
   226                           	opt stack 0
   227                           intcon2	equ	0xFF1
   228                           postinc0	equ	0xFEE
   229                           wreg	equ	0xFE8
   230                           status	equ	0xFD8
   231                           
   232 ;; *************** function _inputPoll *****************
   233 ;; Defined at:
   234 ;;		line 83 in file "main.c"
   235 ;; Parameters:    Size  Location     Type
   236 ;;		None
   237 ;; Auto vars:     Size  Location     Type
   238 ;;		None
   239 ;; Return value:  Size  Location     Type
   240 ;;		None               void
   241 ;; Registers used:
   242 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
   243 ;; Tracked objects:
   244 ;;		On entry : 0/0
   245 ;;		On exit  : 0/0
   246 ;;		Unchanged: 0/0
   247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   248 ;;      Params:         0       0       0       0       0       0       0
   249 ;;      Locals:         0       0       0       0       0       0       0
   250 ;;      Temps:          0       0       0       0       0       0       0
   251 ;;      Totals:         0       0       0       0       0       0       0
   252 ;;Total ram usage:        0 bytes
   253 ;; Hardware stack levels used:    1
   254 ;; Hardware stack levels required when called:    1
   255 ;; This function calls:
   256 ;;		___awmod
   257 ;; This function is called by:
   258 ;;		_main
   259 ;; This function uses a non-reentrant model
   260 ;;
   261                           
   262                           	psect	text1
   263  007E58                     __ptext1:
   264                           	opt stack 0
   265  007E58                     _inputPoll:
   266                           	opt stack 29
   267                           
   268                           ;main.c: 85: readings[stage] = PORTB;
   269                           
   270                           ;incstack = 0
   271  007E58  5020               	movf	_stage,w,c
   272  007E5A  0D01               	mullw	1
   273  007E5C  0E11               	movlw	low _readings
   274  007E5E  24F3               	addwf	prodl,w,c
   275  007E60  6ED9               	movwf	fsr2l,c
   276  007E62  0E00               	movlw	high _readings
   277  007E64  20F4               	addwfc	prodh,w,c
   278  007E66  6EDA               	movwf	fsr2h,c
   279  007E68  CF81 FFDF          	movff	3969,indf2	;volatile
   280                           
   281                           ;main.c: 86: stage = (++stage)%15;
   282  007E6C  2A20               	incf	_stage,f,c
   283  007E6E  C020  F001         	movff	_stage,___awmod@dividend
   284  007E72  6A02               	clrf	___awmod@dividend+1,c
   285  007E74  0E00               	movlw	0
   286  007E76  6E04               	movwf	___awmod@divisor+1,c
   287  007E78  0E0F               	movlw	15
   288  007E7A  6E03               	movwf	___awmod@divisor,c
   289  007E7C  EC6F  F03F         	call	___awmod	;wreg free
   290  007E80  5001               	movf	?___awmod,w,c
   291  007E82  6E20               	movwf	_stage,c
   292  007E84  0012               	return	
   293  007E86                     __end_of_inputPoll:
   294                           	opt stack 0
   295                           prodh	equ	0xFF4
   296                           prodl	equ	0xFF3
   297                           intcon2	equ	0xFF1
   298                           postinc0	equ	0xFEE
   299                           wreg	equ	0xFE8
   300                           indf2	equ	0xFDF
   301                           fsr2h	equ	0xFDA
   302                           fsr2l	equ	0xFD9
   303                           status	equ	0xFD8
   304                           
   305 ;; *************** function ___awmod *****************
   306 ;; Defined at:
   307 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\awmod.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;  dividend        2    0[COMRAM] int 
   310 ;;  divisor         2    2[COMRAM] int 
   311 ;; Auto vars:     Size  Location     Type
   312 ;;  sign            1    5[COMRAM] unsigned char 
   313 ;;  counter         1    4[COMRAM] unsigned char 
   314 ;; Return value:  Size  Location     Type
   315 ;;                  2    0[COMRAM] int 
   316 ;; Registers used:
   317 ;;		wreg, status,2, status,0, prodl
   318 ;; Tracked objects:
   319 ;;		On entry : 0/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   323 ;;      Params:         4       0       0       0       0       0       0
   324 ;;      Locals:         2       0       0       0       0       0       0
   325 ;;      Temps:          0       0       0       0       0       0       0
   326 ;;      Totals:         6       0       0       0       0       0       0
   327 ;;Total ram usage:        6 bytes
   328 ;; Hardware stack levels used:    1
   329 ;; This function calls:
   330 ;;		Nothing
   331 ;; This function is called by:
   332 ;;		_inputPoll
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336                           	psect	text2
   337  007EDE                     __ptext2:
   338                           	opt stack 0
   339  007EDE                     ___awmod:
   340                           	opt stack 29
   341                           
   342                           ;incstack = 0
   343  007EDE  0E00               	movlw	0
   344  007EE0  6E06               	movwf	___awmod@sign,c
   345  007EE2  5002               	movf	___awmod@dividend+1,w,c
   346  007EE4  0A80               	xorlw	128
   347  007EE6  6EF3               	movwf	prodl,c
   348  007EE8  0E80               	movlw	128
   349  007EEA  5CF3               	subwf	prodl,w,c
   350  007EEC  0E00               	movlw	0
   351  007EEE  B4D8               	btfsc	status,2,c
   352  007EF0  5C01               	subwf	___awmod@dividend,w,c
   353  007EF2  B0D8               	btfsc	status,0,c
   354  007EF4  D006               	goto	l621
   355  007EF6  6C01               	negf	___awmod@dividend,c
   356  007EF8  1E02               	comf	___awmod@dividend+1,f,c
   357  007EFA  B0D8               	btfsc	status,0,c
   358  007EFC  2A02               	incf	___awmod@dividend+1,f,c
   359  007EFE  0E01               	movlw	1
   360  007F00  6E06               	movwf	___awmod@sign,c
   361  007F02                     l621:
   362  007F02  5004               	movf	___awmod@divisor+1,w,c
   363  007F04  0A80               	xorlw	128
   364  007F06  6EF3               	movwf	prodl,c
   365  007F08  0E80               	movlw	128
   366  007F0A  5CF3               	subwf	prodl,w,c
   367  007F0C  0E00               	movlw	0
   368  007F0E  B4D8               	btfsc	status,2,c
   369  007F10  5C03               	subwf	___awmod@divisor,w,c
   370  007F12  B0D8               	btfsc	status,0,c
   371  007F14  D004               	goto	l625
   372  007F16  6C03               	negf	___awmod@divisor,c
   373  007F18  1E04               	comf	___awmod@divisor+1,f,c
   374  007F1A  B0D8               	btfsc	status,0,c
   375  007F1C  2A04               	incf	___awmod@divisor+1,f,c
   376  007F1E                     l625:
   377  007F1E  5004               	movf	___awmod@divisor+1,w,c
   378  007F20  1003               	iorwf	___awmod@divisor,w,c
   379  007F22  B4D8               	btfsc	status,2,c
   380  007F24  D018               	goto	l641
   381  007F26  0E01               	movlw	1
   382  007F28  6E05               	movwf	___awmod@counter,c
   383  007F2A  D004               	goto	l631
   384  007F2C                     l629:
   385  007F2C  90D8               	bcf	status,0,c
   386  007F2E  3603               	rlcf	___awmod@divisor,f,c
   387  007F30  3604               	rlcf	___awmod@divisor+1,f,c
   388  007F32  2A05               	incf	___awmod@counter,f,c
   389  007F34                     l631:
   390  007F34  AE04               	btfss	___awmod@divisor+1,7,c
   391  007F36  D7FA               	goto	l629
   392  007F38                     l633:
   393  007F38  5003               	movf	___awmod@divisor,w,c
   394  007F3A  5C01               	subwf	___awmod@dividend,w,c
   395  007F3C  5004               	movf	___awmod@divisor+1,w,c
   396  007F3E  5802               	subwfb	___awmod@dividend+1,w,c
   397  007F40  A0D8               	btfss	status,0,c
   398  007F42  D004               	goto	l637
   399  007F44  5003               	movf	___awmod@divisor,w,c
   400  007F46  5E01               	subwf	___awmod@dividend,f,c
   401  007F48  5004               	movf	___awmod@divisor+1,w,c
   402  007F4A  5A02               	subwfb	___awmod@dividend+1,f,c
   403  007F4C                     l637:
   404  007F4C  90D8               	bcf	status,0,c
   405  007F4E  3204               	rrcf	___awmod@divisor+1,f,c
   406  007F50  3203               	rrcf	___awmod@divisor,f,c
   407  007F52  2E05               	decfsz	___awmod@counter,f,c
   408  007F54  D7F1               	goto	l633
   409  007F56                     l641:
   410  007F56  5006               	movf	___awmod@sign,w,c
   411  007F58  B4D8               	btfsc	status,2,c
   412  007F5A  D004               	goto	l645
   413  007F5C  6C01               	negf	___awmod@dividend,c
   414  007F5E  1E02               	comf	___awmod@dividend+1,f,c
   415  007F60  B0D8               	btfsc	status,0,c
   416  007F62  2A02               	incf	___awmod@dividend+1,f,c
   417  007F64                     l645:
   418  007F64  C001  F001         	movff	___awmod@dividend,?___awmod
   419  007F68  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
   420  007F6C  0012               	return	
   421  007F6E                     __end_of___awmod:
   422                           	opt stack 0
   423                           prodh	equ	0xFF4
   424                           prodl	equ	0xFF3
   425                           intcon2	equ	0xFF1
   426                           postinc0	equ	0xFEE
   427                           wreg	equ	0xFE8
   428                           indf2	equ	0xFDF
   429                           fsr2h	equ	0xFDA
   430                           fsr2l	equ	0xFD9
   431                           status	equ	0xFD8
   432                           
   433 ;; *************** function _digitalRead *****************
   434 ;; Defined at:
   435 ;;		line 89 in file "main.c"
   436 ;; Parameters:    Size  Location     Type
   437 ;;  pin             2    0[COMRAM] int 
   438 ;; Auto vars:     Size  Location     Type
   439 ;;  i               2    8[COMRAM] int 
   440 ;; Return value:  Size  Location     Type
   441 ;;                  2    0[COMRAM] int 
   442 ;; Registers used:
   443 ;;		wreg, fsr2l, fsr2h, status,2, status,0
   444 ;; Tracked objects:
   445 ;;		On entry : 0/0
   446 ;;		On exit  : 0/0
   447 ;;		Unchanged: 0/0
   448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   449 ;;      Params:         2       0       0       0       0       0       0
   450 ;;      Locals:         2       0       0       0       0       0       0
   451 ;;      Temps:          6       0       0       0       0       0       0
   452 ;;      Totals:        10       0       0       0       0       0       0
   453 ;;Total ram usage:       10 bytes
   454 ;; Hardware stack levels used:    1
   455 ;; This function calls:
   456 ;;		Nothing
   457 ;; This function is called by:
   458 ;;		_main
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           	psect	text3
   463  007F6E                     __ptext3:
   464                           	opt stack 0
   465  007F6E                     _digitalRead:
   466                           	opt stack 30
   467                           
   468                           ;main.c: 91: for (int i = 0; i<15; i++)
   469                           
   470                           ;incstack = 0
   471  007F6E  0E00               	movlw	0
   472  007F70  6E0A               	movwf	digitalRead@i+1,c
   473  007F72  0E00               	movlw	0
   474  007F74  6E09               	movwf	digitalRead@i,c
   475  007F76  500A               	movf	digitalRead@i+1,w,c
   476  007F78  0A80               	xorlw	128
   477  007F7A  0F80               	addlw	-128
   478  007F7C  0E0F               	movlw	15
   479  007F7E  B4D8               	btfsc	status,2,c
   480  007F80  5C09               	subwf	digitalRead@i,w,c
   481  007F82  B0D8               	btfsc	status,0,c
   482  007F84  D02C               	goto	l669
   483                           
   484                           ;main.c: 92: {
   485                           ;main.c: 93: if ((readings[i] & (1<<pin)) != (readings[0] & (1<<pin)))
   486  007F86  C001  F003         	movff	digitalRead@pin,??_digitalRead
   487  007F8A  0E01               	movlw	1
   488  007F8C  6E04               	movwf	(??_digitalRead+1)& (0+255),c
   489  007F8E  2A03               	incf	??_digitalRead,f,c
   490  007F90  D002               	goto	u84
   491  007F92                     u85:
   492  007F92  90D8               	bcf	status,0,c
   493  007F94  3604               	rlcf	??_digitalRead+1,f,c
   494  007F96                     u84:
   495  007F96  2E03               	decfsz	??_digitalRead,f,c
   496  007F98  D7FC               	goto	u85
   497  007F9A  5004               	movf	??_digitalRead+1,w,c
   498  007F9C  1411               	andwf	_readings,w,c
   499  007F9E  6E05               	movwf	(??_digitalRead+2)& (0+255),c
   500  007FA0  0E11               	movlw	low _readings
   501  007FA2  2409               	addwf	digitalRead@i,w,c
   502  007FA4  6ED9               	movwf	fsr2l,c
   503  007FA6  0E00               	movlw	high _readings
   504  007FA8  200A               	addwfc	digitalRead@i+1,w,c
   505  007FAA  6EDA               	movwf	fsr2h,c
   506  007FAC  50DF               	movf	indf2,w,c
   507  007FAE  6E06               	movwf	(??_digitalRead+3)& (0+255),c
   508  007FB0  C001  F007         	movff	digitalRead@pin,??_digitalRead+4
   509  007FB4  0E01               	movlw	1
   510  007FB6  6E08               	movwf	(??_digitalRead+5)& (0+255),c
   511  007FB8  2A07               	incf	??_digitalRead+4,f,c
   512  007FBA  D002               	goto	u94
   513  007FBC                     u95:
   514  007FBC  90D8               	bcf	status,0,c
   515  007FBE  3608               	rlcf	??_digitalRead+5,f,c
   516  007FC0                     u94:
   517  007FC0  2E07               	decfsz	??_digitalRead+4,f,c
   518  007FC2  D7FC               	goto	u95
   519  007FC4  5008               	movf	??_digitalRead+5,w,c
   520  007FC6  1406               	andwf	??_digitalRead+3,w,c
   521  007FC8  1805               	xorwf	??_digitalRead+2,w,c
   522  007FCA  B4D8               	btfsc	status,2,c
   523  007FCC  D005               	goto	l665
   524                           
   525                           ;main.c: 94: return 0;
   526  007FCE  0E00               	movlw	0
   527  007FD0  6E02               	movwf	?_digitalRead+1,c
   528  007FD2  0E00               	movlw	0
   529  007FD4  6E01               	movwf	?_digitalRead,c
   530  007FD6  0012               	return	
   531  007FD8                     l665:
   532  007FD8  4A09               	infsnz	digitalRead@i,f,c
   533  007FDA  2A0A               	incf	digitalRead@i+1,f,c
   534  007FDC  D7CC               	goto	L2
   535  007FDE                     l669:
   536                           
   537                           ;main.c: 95: }
   538                           ;main.c: 96: return (readings[0] & (1<<pin));
   539  007FDE  C001  F003         	movff	digitalRead@pin,??_digitalRead
   540  007FE2  0E01               	movlw	1
   541  007FE4  6E04               	movwf	(??_digitalRead+1)& (0+255),c
   542  007FE6  2A03               	incf	??_digitalRead,f,c
   543  007FE8  D002               	goto	u124
   544  007FEA                     u125:
   545  007FEA  90D8               	bcf	status,0,c
   546  007FEC  3604               	rlcf	??_digitalRead+1,f,c
   547  007FEE                     u124:
   548  007FEE  2E03               	decfsz	??_digitalRead,f,c
   549  007FF0  D7FC               	goto	u125
   550  007FF2  5004               	movf	??_digitalRead+1,w,c
   551  007FF4  1411               	andwf	_readings,w,c
   552  007FF6  6E05               	movwf	(??_digitalRead+2)& (0+255),c
   553  007FF8  5005               	movf	??_digitalRead+2,w,c
   554  007FFA  6E01               	movwf	?_digitalRead,c
   555  007FFC  6A02               	clrf	?_digitalRead+1,c
   556  007FFE  0012               	return	
   557  008000                     __end_of_digitalRead:
   558                           	opt stack 0
   559  0000                     prodh	equ	0xFF4
   560                           prodl	equ	0xFF3
   561                           intcon2	equ	0xFF1
   562                           postinc0	equ	0xFEE
   563                           wreg	equ	0xFE8
   564                           indf2	equ	0xFDF
   565                           fsr2h	equ	0xFDA
   566                           fsr2l	equ	0xFD9
   567                           status	equ	0xFD8
   568                           prodh	equ	0xFF4
   569                           prodl	equ	0xFF3
   570                           intcon2	equ	0xFF1
   571                           postinc0	equ	0xFEE
   572                           wreg	equ	0xFE8
   573                           indf2	equ	0xFDF
   574                           fsr2h	equ	0xFDA
   575                           fsr2l	equ	0xFD9
   576                           status	equ	0xFD8
   577                           
   578                           	psect	rparam
   579  0000                     prodh	equ	0xFF4
   580                           prodl	equ	0xFF3
   581                           intcon2	equ	0xFF1
   582                           postinc0	equ	0xFEE
   583                           wreg	equ	0xFE8
   584                           indf2	equ	0xFDF
   585                           fsr2h	equ	0xFDA
   586                           fsr2l	equ	0xFD9
   587                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         15
    Persistent  1
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     16      32
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_digitalRead
    _inputPoll->___awmod

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 6     1      5     466
                                             10 COMRAM     6     1      5
                        _digitalRead
                          _inputPoll
 ---------------------------------------------------------------------------------
 (1) _inputPoll                                            0     0      0     263
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              6     2      4     263
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _digitalRead                                         10     8      2     158
                                              0 COMRAM    10     8      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _digitalRead
   _inputPoll
     ___awmod

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      17        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      16        0.0%
BANK5              100      0       0      14        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     10      20       1       33.7%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      20      15        0.0%
DATA                 0      0      20       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Tue Feb 17 15:25:51 2015

                     l29 7ED8                       u84 7F96                       u85 7F92  
                     u94 7FC0                       u95 7FBC             __CFG_CP0$OFF 000000  
           __CFG_CP1$OFF 000000             __CFG_CP2$OFF 000000             __CFG_CP3$OFF 000000  
            __CFG_LVP$ON 000000                      l621 7F02                      l631 7F34  
                    l633 7F38                      l641 7F56                      l625 7F1E  
                    l645 7F64                      l637 7F4C                      l629 7F2C  
                    l665 7FD8                      l691 7EB8                      l683 7E94  
                    l669 7FDE                      l693 7EC0                      l695 7EC4  
           __CFG_CPB$OFF 000000                      u124 7FEE                      u125 7FEA  
           __CFG_CPD$OFF 000000             __CFG_BORV$18 000000             ___awmod@sign 0006  
                    prod 000FF3                      wreg 000FE8             __CFG_IESO$ON 000000  
                   _LATD 000F8C                     _WPUB 000F7C                     _main 7E86  
                   indf2 000FDF                     fsr2l 000FD9                     prodl 000FF3  
                   start 0000            __CFG_MCLRE$ON 000000                    ?_main 000B  
        __end_of___awmod 7F6E                    _PORTB 000F81                    _TRISB 000F93  
                  _TRISD 000F95            __CFG_PWRT$OFF 000000            __CFG_WRT0$OFF 000000  
          __CFG_WRT1$OFF 000000            __CFG_WRT2$OFF 000000            __CFG_WRT3$OFF 000000  
         __CFG_EBTR0$OFF 000000           __CFG_FCMEN$OFF 000000           __CFG_EBTR1$OFF 000000  
         __CFG_EBTR2$OFF 000000           __CFG_EBTR3$OFF 000000            __CFG_WRTB$OFF 000000  
          __CFG_WRTC$OFF 000000            __CFG_WRTD$OFF 000000           __CFG_EBTRB$OFF 000000  
                  _stage 0020                    status 000FD8           __CFG_HFOFST$ON 000000  
        __initialization 7E46             __end_of_main 7EDE                   ??_main 0010  
          __activetblptr 000000     __size_of_digitalRead 0092           __CFG_WDTEN$OFF 000000  
         __CFG_XINST$OFF 000000           __CFG_STVREN$ON 000000                ??___awmod 0005  
                 clear_0 7E4C          ___awmod@divisor 0003          ___awmod@counter 0005  
             __accesstop 0060  __end_of__initialization 7E52          __CFG_PBADEN$OFF 000000  
         __pcstackCOMRAM 0001               __pnvCOMRAM 0020       __size_of_inputPoll 002E  
                _INTCON2 000FF1                  __Hparam 0000                  __Lparam 0000  
                ___awmod 7EDE                  __pcinit 7E46                  __ramtop 0600  
                __ptext0 7E86                  __ptext1 7E58                  __ptext2 7EDE  
                __ptext3 7F6E         ___awmod@dividend 0001        __end_of_inputPoll 7E86  
   end_of_initialization 7E52           digitalRead@pin 0001                  postinc0 000FEE  
          ??_digitalRead 0003      start_initialization 7E46      __end_of_digitalRead 8000  
       __CFG_LPT1OSC$OFF 000000              __pbssCOMRAM 0011        __CFG_CCP2MX$PORTC 000000  
               ?___awmod 0001              _digitalRead 7F6E                _inputPoll 7E58  
       __CFG_WDTPS$32768 000000                main@state 0010               ?_inputPoll 0001  
               __Hrparam 0000                 __Lrparam 0000       __CFG_BOREN$SBORDIS 000000  
       __size_of___awmod 0090            __size_of_main 0058                 _readings 0011  
           digitalRead@i 0009                 main@argc 000B                 main@argv 000D  
            ??_inputPoll 0007             ?_digitalRead 0001        __CFG_FOSC$INTIO67 000000  
